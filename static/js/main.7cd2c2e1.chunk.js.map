{"version":3,"sources":["services/index.ts","utils/index.ts","hooks/useLocalStorage.ts","constants/index.ts","services/work-log.ts","services/shareable-urls.ts","App.tsx","components/Time.tsx","components/DateFilter.tsx","components/Textarea.tsx","reportWebVitals.ts","index.tsx"],"names":["request","_localInstance","awaiting","promisifyOnSuccess","a","Promise","resolve","addEventListener","console","error","event","target","result","identity","value","generateUniqueID","uuidv4","useLocalStorageState","key","defaultValue","castInto","useState","localStorage","getItem","state","setState","setItem","WORK_LOG","SHAREABLE_URLS","upgradeHandlers","addUpgradeHandler","handler","push","getDatabaseConnection","indexedDB","open","log","forEach","_function","hashWorkLogEntries","worklogEntries","sha1","JSON","stringify","toString","createObjectStore","autoIncrement","createIndex","unique","removeIndexDbStore","db","transaction","objectStore","clear","fetchWorkLogEntries","linkKey","promise","dateIndex","index","getAllKeys","keys","promises","map","get","all","results","resultsWithKeys","filter","workLogEntry","createWorkLogEntry","payload","uniqueId","put","dateCreation","Date","toJSON","updateWorkLogEntry","onsuccess","SHAREABLE_URL_ENDPOINT","fetchShareableURL","urlKey","fetch","method","response","json","updateRemoteShareableURL","worklog","contentHash","headers","Accept","body","fetchShareableURLsMetaData","urlKeys","requestShareableURL","retrieveKey","Error","status","isCreated","dateModification","viewCount","getLocalShareableURL","updateLocalShareableURL","document","delete","createLocalShareableURL","fetchLocalShareableUrls","metadata","shareableUrl","shareableUrlWithMetaData","find","__timerInstance","Time","seconds","className","Math","floor","DateFilter","currentDate","getFullYear","currentYear","setCurrentYear","getMonth","currentMonth","setCurrentMonth","getDay","currentDay","setCurrentDay","style","display","justifyContent","marginTop","onChange","Number","Array","fill","_","Textarea","inputElement","useRef","useEffect","current","focus","select","ref","App","workLogEntriesFetcher","shareableUrlsFetcher","isLoading","setIsLoading","setSeconds","Boolean","isRunning","setIsRunning","projectName","setProjectName","workLogEntries","setWorkLogEntries","currentWorkLogEntriesHash","setCurrentWorkLogEntriesHash","currentLinkKey","setCurrentLinkKey","shareableUrls","setShareableUrls","notes","setNotes","ratePerHour","setRatePerHour","currency","setCurrency","currentEditingEntry","setCurrentEditingEntry","currentEditingField","setCurrentEditingField","showFilterBar","setShowFilterBar","setError","info","setInfo","isCreateShareableURLInProgress","setIsCreateShareableURLInProgress","exportDatabases","stringifiedJSONDump","entries","element","createElement","setAttribute","encodeURIComponent","appendChild","click","removeChild","loadWorkLogEntries","useMemo","remoteShareableURL","loadShareableUrls","removeItem","querySelector","setTimeout","clearTimeout","processSaveButton","date","getDate","processLogEntryEdit","currentWorkLogEntry","entry","resetCurrentDatabase","totalSeconds","reduce","left","right","createShareableURL","window","location","hash","slice","isValidLinkKey","validate","pushChanges","deleteLink","deleteLocalShareableURL","id","href","htmlFor","type","flexDirection","rows","gap","onClick","preventDefault","colSpan","length","verticalAlign","cursor","width","number","numberIndex","year","month","day","whiteSpace","rowSpan","textAlign","name","fontSize","toFixed","USD","EUR","TL","files","reader","FileReader","onload","dump","parse","readAsText","disabled","rel","padding","title","toLocaleString","timeZone","confirm","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7cd2c2e1.chunk.js","sourcesContent":["import { DB_NAME, DB_VERSION } from \"../constants\";\n\nlet request: IDBRequest;\n\nconst upgradeHandlers: Array<Function> = [];\n\nexport const addUpgradeHandler = (handler: Function) => {\n  upgradeHandlers.push(handler);\n}\n\nlet _localInstance: IDBDatabase | null;\nlet awaiting: Promise<IDBDatabase>;\n\nexport const getDatabaseConnection = async(): Promise<IDBDatabase> => {\n  if (_localInstance) {\n    return Promise.resolve(_localInstance);\n  }\n\n  if (awaiting) {\n    return awaiting;\n  }\n\n  awaiting = \n    new Promise(resolve => {\n      request = indexedDB.open(DB_NAME, DB_VERSION);\n      request.addEventListener('upgradeneeded', () => {\n        console.log('upgradeneeded');\n        upgradeHandlers.forEach((_function: any) => _function(request.result));\n      });\n      request.addEventListener('success', () => {\n        resolve(request.result as IDBDatabase);\n        _localInstance = request.result;\n      });\n    });\n\n  return awaiting;\n}\n","import { v4 as uuidv4, validate } from \"uuid\";\n\nexport const promisifyOnSuccess = async (request: IDBRequest) => {\n  return new Promise<any>((resolve) => {\n    request.addEventListener('error', () => {\n      console.error('error', request.error);\n    });\n    request.addEventListener('success', (event: Event) => {\n      const target = event.target as IDBRequest;\n      resolve(target.result);\n    });\n  });\n}\n\nexport const identity = (value: any) => value;\n\nexport const generateUniqueID = () => {\n  return uuidv4();\n}\n\nexport const isValidUUIDKey = (key: string) => validate(key);\n","import { useState } from 'react';\nimport { identity } from '../utils';\n\nexport const useLocalStorageState = (key: string, defaultValue: any, castInto: Function=identity) => {\n  const [state, setState] = useState(\n    castInto(localStorage.getItem(key) || defaultValue)\n  );\n  return [\n    state,\n    (value: string) => {\n      localStorage.setItem(key, value);\n      setState(value);\n    },\n  ];\n}\n","export const DB_NAME = \"time-tracker.\";\nexport const DB_VERSION = 1;\nexport const WORK_LOG = \"work-log\";\nexport const SHAREABLE_URLS = \"shareable-urls\";\n","import sha1 from 'crypto-js/sha1';\nimport { addUpgradeHandler, getDatabaseConnection } from '.';\n\nimport { WORK_LOG } from '../constants';\nimport { WorkLogEntries, WorkLogEntry } from '../types';\nimport { generateUniqueID, promisifyOnSuccess } from '../utils';\n\nexport const hashWorkLogEntries = (worklogEntries: WorkLogEntries) => {\n  return sha1(JSON.stringify(worklogEntries)).toString();\n};\n\naddUpgradeHandler(async (result: any) => {\n  const documentObjectStore = result.createObjectStore(WORK_LOG, { autoIncrement: false });\n  documentObjectStore.createIndex(\"dateCreation\", \"dateCreation\", { unique: false });\n});\n\nexport const getWorkLogLinkKeysDatabaseInstance = async (linkKey: string) => {\n  return new Promise(async (resolve) => {\n    const request = await getDatabaseConnection();\n    resolve(request);\n  });\n}\n\nexport const removeIndexDbStore = async () => {\n  const db: IDBDatabase = await getDatabaseConnection();\n  const transaction: IDBTransaction = db.transaction(WORK_LOG, \"readwrite\");\n  const objectStore: IDBObjectStore = transaction.objectStore(WORK_LOG);\n  objectStore.clear();\n  return Promise.resolve();\n}\n\nexport async function fetchWorkLogEntries(linkKey?: string) {\n  const promise = new Promise(async (resolve) => {\n    let keys, objectStore: IDBObjectStore;\n    const db = await getDatabaseConnection();\n    const transaction = db.transaction(WORK_LOG, \"readonly\");\n    objectStore = transaction.objectStore(WORK_LOG);\n    const dateIndex = objectStore.index(\"dateCreation\");\n    keys = await promisifyOnSuccess(dateIndex.getAllKeys());\n    \n    const promises = keys.map((key: string) =>\n      promisifyOnSuccess(objectStore.get(key))\n    );\n    const results = await Promise.all(promises);\n    const resultsWithKeys: Array<WorkLogEntry> = keys\n      .map((key: string, index: number) => ({ key, ...results[index],}))\n      .filter((workLogEntry: WorkLogEntry) => (workLogEntry.linkKey === linkKey || !workLogEntry.linkKey));\n    resolve(resultsWithKeys);\n  });\n\n  return promise as Promise<WorkLogEntries>;\n}\n\nexport async function createWorkLogEntry(payload:WorkLogEntry, uniqueId: string='') {\n  const promise: Promise<void> = new Promise(async (resolve) => {\n    const db = await getDatabaseConnection();\n    const transaction = db.transaction(WORK_LOG, \"readwrite\");\n    const objectStore = transaction.objectStore(WORK_LOG);\n    const key = uniqueId || generateUniqueID();\n    const request: IDBRequest = objectStore.put({\n      ...payload,\n      dateCreation: payload.dateCreation || new Date().toJSON(),\n      key\n    },key);\n    request.addEventListener('success', () => resolve())\n  });\n  return promise;\n}\n\nexport async function updateWorkLogEntry(payload: WorkLogEntry, key: string) {\n  const promise = new Promise(async (resolve) => {\n    const db = await getDatabaseConnection();\n    const transaction = db.transaction(WORK_LOG, \"readwrite\");\n    const objectStore = transaction.objectStore(WORK_LOG);\n    objectStore.put(payload, key).onsuccess = resolve;\n  });\n  return promise;\n}\n","import { addUpgradeHandler, getDatabaseConnection } from \".\";\nimport { SHAREABLE_URLS } from \"../constants\";\nimport { WorkLogEntries, ShareableURL } from \"../types\";\nimport { promisifyOnSuccess } from \"../utils\";\n\nconst SHAREABLE_URL_ENDPOINT = `https://shareble-url-service.fatih-erikli.workers.dev/`;\n\naddUpgradeHandler(async (result: any) => {\n  const shareableUrlsObjectStore = result.createObjectStore(SHAREABLE_URLS, { autoIncrement: false });\n  shareableUrlsObjectStore.createIndex(\"dateCreation\", \"dateCreation\", { unique: false });\n});\n\nexport const fetchShareableURL = async (urlKey: string) => {\n  let response;\n  response = await fetch(`${SHAREABLE_URL_ENDPOINT}${urlKey}`, { method: \"GET\" });\n  response = await response.json();\n  response = response as any;\n  return response as ShareableURL;\n};\n\nexport const updateRemoteShareableURL = async (\n  urlKey: string,\n  worklog: WorkLogEntries,\n  contentHash: string,\n) => {\n  let response;\n  response = await fetch(`${SHAREABLE_URL_ENDPOINT}${urlKey}`, {\n    method: \"PUT\", \n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      contentHash,\n      worklog,\n      key: urlKey,\n    }),\n  });\n  response = await response.json();\n  response = response as any;\n  return response as ShareableURL;\n};\n\nexport const fetchShareableURLsMetaData = async (urlKeys: Array<string>) => {\n  let response;\n  response = await fetch(`${SHAREABLE_URL_ENDPOINT}metadata`, { method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      urlKeys,\n    })\n  });\n  response = await response.json();\n  response = (response as any).urlKeys;\n  return response as Array<{\n    key: string;\n    contentHash: string;\n    dateCreation: string;\n    dateModification: string;\n    viewCount: number;\n  }>;\n}\n\nexport const requestShareableURL = async (\n  worklog: WorkLogEntries,\n  contentHash: string,\n  urlKey: string,\n) => {\n  let response;\n  let retrieveKey = urlKey;\n  try {\n    response = await fetch(SHAREABLE_URL_ENDPOINT, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        contentHash,\n        worklog,\n        key: urlKey,\n      }),\n    });\n  } catch (e) {\n    throw new Error('Failed.');\n  }\n  if (response.status === 400) {\n    response = await response.json();\n    if (response['existing-document']) {\n      retrieveKey = response['existing-document'];\n    }\n  }\n  response = await fetchShareableURLsMetaData([retrieveKey]);\n  response = response[0];\n  return ({\n    worklog: [],\n    key: response.key,\n    contentHash: response.contentHash,\n    isCreated: retrieveKey === urlKey,\n    dateCreation: response.dateCreation,\n    dateModification: response.dateModification,\n    viewCount: response.viewCount,\n  }) as ShareableURL;\n};\n\nexport async function getLocalShareableURL(key: string): Promise<ShareableURL> {\n  const db = await getDatabaseConnection();\n  const transaction = db.transaction(SHAREABLE_URLS, \"readonly\");\n  const objectStore = transaction.objectStore(SHAREABLE_URLS);\n  return await promisifyOnSuccess(objectStore.get(key));\n}\n\nexport async function updateLocalShareableURL(\n  key: string,\n  contentHash: string,\n  dateModification: string,\n  viewCount: number,\n): Promise<ShareableURL> {\n  const db = await getDatabaseConnection();\n  const transaction = db.transaction(SHAREABLE_URLS, \"readwrite\");\n  const objectStore = transaction.objectStore(SHAREABLE_URLS);\n  const document = await promisifyOnSuccess(objectStore.get(key));\n  return promisifyOnSuccess(objectStore.put({\n    ...document,\n    contentHash,\n    dateModification,\n    viewCount\n  }, key));\n}\n\nexport async function deleteLocalShareableURL(key: string): Promise<ShareableURL> {\n  const db = await getDatabaseConnection();\n  const transaction = db.transaction(SHAREABLE_URLS, \"readwrite\");\n  const objectStore = transaction.objectStore(SHAREABLE_URLS);\n  return await promisifyOnSuccess(objectStore.delete(key));\n}\n\nexport async function createLocalShareableURL(\n  worklog: WorkLogEntries,\n  key: string,\n  contentHash: string,\n  dateCreation: string,\n  dateModification: string|undefined,\n  viewCount: number,\n) {\n  const promise: Promise<ShareableURL> = new Promise(async (resolve) => {\n    const db = await getDatabaseConnection();\n    const transaction = db.transaction(SHAREABLE_URLS, \"readwrite\");\n    const objectStore = transaction.objectStore(SHAREABLE_URLS);\n    const request: IDBRequest = objectStore.put({\n      key,\n      worklog,\n      dateModification,\n      dateCreation,\n      contentHash,\n      viewCount,\n    },key);\n    request.addEventListener('success', async () => {\n      const document = await getLocalShareableURL(key);\n      resolve(document as ShareableURL);\n    });\n  });\n  return promise;\n}\n\nexport const getShareableUrlDatabaseInstance = async () => {\n  return new Promise<IDBDatabase>(async (resolve) => {\n    const request = await getDatabaseConnection();\n    return request;\n  });\n}\n\nexport async function fetchLocalShareableUrls() {\n  const promise = new Promise(async (resolve) => {\n    const db: IDBDatabase = await getDatabaseConnection();\n    const transaction = db.transaction(SHAREABLE_URLS, \"readonly\");\n    const objectStore = transaction.objectStore(SHAREABLE_URLS);\n    const dateIndex = objectStore.index(\"dateCreation\");\n    const keys: Array<string> = await promisifyOnSuccess(dateIndex.getAllKeys());\n    const promises = keys.map((key) =>\n      promisifyOnSuccess(objectStore.get(key))\n    );\n    const results = await Promise.all(promises);\n    let resultsWithKeys: Array<ShareableURL> = keys.map((key, index) => ({\n      key,\n      ...results[index],\n    }));\n    const metadata = await fetchShareableURLsMetaData(keys);\n    resultsWithKeys = resultsWithKeys.map(shareableUrl => {\n      const shareableUrlWithMetaData = metadata.find(({key}) => key === shareableUrl.key);\n      if (shareableUrlWithMetaData) {\n        return {\n          ...shareableUrl,\n          viewCount: shareableUrlWithMetaData.viewCount,\n          dateModification: shareableUrlWithMetaData.dateModification,\n          contentHash: shareableUrlWithMetaData.contentHash,\n        };\n      } else {\n        return shareableUrl;\n      }\n    });\n    resolve(resultsWithKeys);\n  });\n\n  return promise as Promise<Array<ShareableURL>>;\n}\n","import { useState, useEffect, ChangeEvent, ChangeEventHandler, useMemo } from \"react\";\n\nimport { useLocalStorageState } from \"./hooks/useLocalStorage\";\nimport {\n  fetchWorkLogEntries,\n  removeIndexDbStore,\n  updateWorkLogEntry,\n  createWorkLogEntry,\n  hashWorkLogEntries,\n} from \"./services/work-log\";\nimport {\n  createLocalShareableURL,\n  deleteLocalShareableURL,\n  fetchLocalShareableUrls,\n  fetchShareableURL,\n  getLocalShareableURL,\n  requestShareableURL,\n  updateLocalShareableURL,\n  updateRemoteShareableURL,\n} from \"./services/shareable-urls\";\nimport { Error, ShareableURL, WorkLogEntries } from \"./types\";\nimport { generateUniqueID, isValidUUIDKey } from \"./utils\";\n\nimport Time from \"./components/Time\";\nimport DateFilter from \"./components/DateFilter\";\nimport Textarea from \"./components/Textarea\";\n\nimport \"./App.css\";\n\nlet __timerInstance: NodeJS.Timeout;\n\ntype AppProps = {\n  workLogEntriesFetcher?: Function;\n  shareableUrlsFetcher?: Function;\n};\n\nfunction App({ workLogEntriesFetcher, shareableUrlsFetcher }: AppProps) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [seconds, setSeconds] = useLocalStorageState(\"seconds\", 0, Number);\n  const [isRunning, setIsRunning] = useLocalStorageState(\n    \"isRunning\",\n    false,\n    Boolean\n  );\n  const [projectName, setProjectName] = useLocalStorageState(\"projectName\", \"\");\n  const [workLogEntries, setWorkLogEntries] = useState<WorkLogEntries>([]);\n  const [currentWorkLogEntriesHash, setCurrentWorkLogEntriesHash] = useState<string|null>(null);\n  const [currentLinkKey, setCurrentLinkKey] = useState<string|null>(null);\n  const [shareableUrls, setShareableUrls] = useState<Array<ShareableURL>>([]);\n  const [notes, setNotes] = useLocalStorageState(\"notes\", \"\");\n  const [ratePerHour, setRatePerHour] = useLocalStorageState(\n    \"ratePerHour\",\n    0,\n    Number\n  );\n  const [currency, setCurrency] = useLocalStorageState(\"currency\", \"USD\");\n  const [currentEditingEntry, setCurrentEditingEntry] = useState<string | null>(\n    null\n  );\n  const [currentEditingField, setCurrentEditingField] = useState<string | null>(\n    null\n  );\n  const [showFilterBar, setShowFilterBar] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [info, setInfo] = useState<string | null>(null);\n  const [isCreateShareableURLInProgress, setIsCreateShareableURLInProgress] =\n    useState(false);\n  const loadFile: ChangeEventHandler = (event: ChangeEvent) => {\n    setError(null);\n    if (!event.target) {\n      return;\n    }\n    const files = (event.target as HTMLInputElement).files;\n    if (!files) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = async (event) => {\n      if (!event.target) {\n        return;\n      }\n      let dump;\n      try {\n        dump = JSON.parse(event.target.result as any);\n      } catch (e) {\n        setError(\"Provide a valid JSON file.\");\n        return;\n      }\n      const { entries } = dump;\n      for (const entry of entries) {\n        await createWorkLogEntry(entry, entry.key);\n      }\n      setInfo(\"Database loaded successfully.\");\n      await loadWorkLogEntries();\n    };\n    reader.readAsText(files[0]);\n  };\n\n  const exportDatabases = async () => {\n    const workLogEntries = await fetchWorkLogEntries();\n\n    const stringifiedJSONDump = JSON.stringify({\n      entries: workLogEntries,\n    });\n\n    const element = document.createElement(\"a\");\n    element.setAttribute(\n      \"href\",\n      \"data:text/plain;charset=utf-8,\" + encodeURIComponent(stringifiedJSONDump)\n    );\n    element.setAttribute(\"download\", \"work-log-database.json\");\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  };\n  const loadWorkLogEntries = useMemo(() => (\n    workLogEntriesFetcher ||\n    (async (linkKey: string) => {\n      setIsLoading(true);\n      if (linkKey) {\n        const remoteShareableURL: ShareableURL = await fetchShareableURL(linkKey);\n        setWorkLogEntries(remoteShareableURL.worklog);\n      } else {\n        const entries = await fetchWorkLogEntries(linkKey);\n        setWorkLogEntries(entries);\n      }\n      setIsLoading(false);\n    })\n  ), [workLogEntriesFetcher]);\n  const loadShareableUrls = useMemo(() => (\n    shareableUrlsFetcher ||\n    (async () => {\n      const shareableUrls = await fetchLocalShareableUrls();\n      setShareableUrls(shareableUrls);\n    })\n  ), [shareableUrlsFetcher]);\n  useEffect(() => {\n    setCurrentWorkLogEntriesHash(hashWorkLogEntries(workLogEntries));\n  }, [workLogEntries]);\n  useEffect(() => {\n    if (isRunning) {\n      localStorage.setItem(\"seconds\", seconds);\n      localStorage.setItem(\"isRunning\", isRunning);\n    } else {\n      localStorage.removeItem(\"isRunning\");\n    }\n    if (seconds === 0) {\n      localStorage.removeItem(\"seconds\");\n    }\n    document\n      .querySelector(\"link[rel='icon']\")\n      ?.setAttribute(\n        \"href\",\n        isRunning && seconds > 0 ? \"favicon-animated.ico\" : \"favicon.ico\"\n      );\n  }, [isRunning, seconds]);\n  useEffect(() => {\n    if (isRunning) {\n      __timerInstance = setTimeout(() => {\n        setSeconds(seconds + 1);\n      }, 1000);\n    }\n    return () => {\n      if (__timerInstance) {\n        clearTimeout(__timerInstance);\n      }\n    };\n  });\n  const processSaveButton = async () => {\n    const date = new Date();\n    await createWorkLogEntry({\n      key: generateUniqueID(),\n      dateCreation: new Date().toJSON(),\n      projectName,\n      seconds,\n      notes,\n      date: [date.getFullYear(), date.getMonth(), date.getDate()],\n    });\n    setNotes(\"\");\n    setIsRunning(false);\n    setSeconds(0);\n    if (__timerInstance) {\n      clearTimeout(__timerInstance);\n    }\n    await loadWorkLogEntries();\n  };\n  const processLogEntryEdit = async () => {\n    const currentWorkLogEntry = workLogEntries.find(\n      (entry) => entry.key === currentEditingEntry\n    );\n    if (currentWorkLogEntry && currentEditingEntry) {\n      await updateWorkLogEntry(currentWorkLogEntry, currentEditingEntry);\n    }\n    setCurrentEditingEntry(null);\n  };\n  const resetCurrentDatabase = async () => {\n    await removeIndexDbStore();\n    await loadWorkLogEntries();\n  };\n  const totalSeconds = workLogEntries.reduce(\n    (left, right) => left + right.seconds,\n    0\n  );\n  const createShareableURL = async () => {\n    const contentHash = hashWorkLogEntries(workLogEntries);\n    const urlKey = generateUniqueID();\n    setIsCreateShareableURLInProgress(true);\n    const remoteShareableURL: ShareableURL | Error = await requestShareableURL(\n      workLogEntries,\n      contentHash,\n      urlKey\n    );\n    if (remoteShareableURL.isCreated) {\n      createLocalShareableURL(\n        remoteShareableURL.worklog,\n        remoteShareableURL.key,\n        remoteShareableURL.contentHash,\n        remoteShareableURL.dateCreation,\n        remoteShareableURL.dateModification,\n        remoteShareableURL.viewCount\n      );\n    } else {\n      setInfo(\"A link for the current state of the work log already exists.\");\n      const localShareableUrl = await getLocalShareableURL(remoteShareableURL.key);\n      if (!localShareableUrl) {\n        createLocalShareableURL(\n          remoteShareableURL.worklog,\n          remoteShareableURL.key,\n          remoteShareableURL.contentHash,\n          remoteShareableURL.dateCreation,\n          remoteShareableURL.dateModification,\n          remoteShareableURL.viewCount\n        );\n      }\n    }\n    loadShareableUrls();\n    setIsCreateShareableURLInProgress(false);\n  };\n  useEffect(() => {\n    const linkKey = window.location.hash.slice(1);\n    const isValidLinkKey = isValidUUIDKey(linkKey);\n\n    if (isValidLinkKey) {\n      setCurrentLinkKey(linkKey);\n    }\n\n    if (loadWorkLogEntries) {\n      if (isValidLinkKey) {\n        loadWorkLogEntries(linkKey);\n      } else {\n        loadWorkLogEntries();\n      }\n    }\n\n    if (loadShareableUrls) {\n      loadShareableUrls();\n    }\n  }, [loadShareableUrls, loadWorkLogEntries]);\n  const pushChanges = async (urlKey: string) => {\n    const document = await updateRemoteShareableURL(urlKey, workLogEntries, currentWorkLogEntriesHash as string);\n    await updateLocalShareableURL(urlKey, document.contentHash, document.dateModification as string, document.viewCount);\n    loadShareableUrls();\n  };\n  const deleteLink = (urlKey: string) => {\n    deleteLocalShareableURL(urlKey);\n    loadShareableUrls();\n  };\n  return (\n    <div id=\"container\">\n      <h3 id=\"logo\"><a href=\"/\">Time tracker</a></h3>\n      {currentLinkKey && (\n        <h2>Currently viewing the work log with the key {currentLinkKey}</h2>\n      )}\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <div style={{}}>\n          <label htmlFor={\"project-id\"}>Project</label>\n          <input\n            id={\"project-id\"}\n            type={\"text\"}\n            value={projectName}\n            onChange={(event) => setProjectName(event.target.value)}\n          />\n        </div>\n        <Time seconds={seconds} />\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <label htmlFor=\"notes\">Notes</label>\n        <textarea\n          id=\"notes\"\n          value={notes}\n          onChange={(event) => setNotes(event.target.value)}\n          rows={4}\n        ></textarea>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"left\",\n          gap: 5,\n          marginTop: 5,\n        }}\n      >\n        <button\n          onClick={() => {\n            if (__timerInstance) {\n              clearTimeout(__timerInstance);\n            }\n\n            setIsRunning(!isRunning);\n          }}\n        >\n          {isRunning ? \"Pause\" : seconds === 0 ? \"Start\" : \"Continue\"}\n        </button>\n        {seconds > 0 && !isRunning && (\n          <button\n            onClick={() => {\n              setSeconds(0);\n            }}\n          >\n            Reset\n          </button>\n        )}\n        {seconds > 0 && (\n          <button onClick={() => processSaveButton()}>Save</button>\n        )}\n      </div>\n      <h3>Work log</h3>\n      <table>\n        <thead>\n          <tr>\n            <th className={\"table-header-project\"}>Project</th>\n            <th className={\"table-header-time\"}>Duration</th>\n            <th className={\"table-header-date\"}>\n              <a\n                href=\"#filter-bar\"\n                onClick={(event) => {\n                  event.preventDefault();\n                  setShowFilterBar(!showFilterBar);\n                }}\n              >\n                Date\n              </a>\n              {showFilterBar && <DateFilter />}\n            </th>\n            <th className={\"table-header-description\"}>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          {isLoading && (\n            <tr>\n            <td colSpan={4}>Loading.</td>\n            </tr>\n          )}\n          {!isLoading && workLogEntries.length === 0 && (\n            <tr>\n              <td colSpan={4}>No data.</td>\n            </tr>\n          )}\n          {workLogEntries.map((entry) => (\n            <tr key={entry.key}>\n              <td\n                style={{\n                  verticalAlign: \"top\",\n                  cursor: \"pointer\"\n                }}\n                onClick={() => {\n                  setCurrentEditingEntry(entry.key);\n                  setCurrentEditingField(\"projectName\");\n                }}\n              >\n                \n                {currentEditingEntry &&\n                currentEditingEntry === entry.key &&\n                currentEditingField === \"projectName\" ? <><input\n                  type={'text'}\n                  onChange={(event: ChangeEvent) => {\n                    setWorkLogEntries(\n                      workLogEntries.map((entry) =>\n                        entry.key === currentEditingEntry\n                          ? { ...entry, projectName: (event.target as any).value }\n                          : entry\n                      )\n                    );\n                  }}\n                  value={entry.projectName}\n                />\n                <button\n                  onClick={processLogEntryEdit}\n                  style={{ width: \"40%\", marginTop: 3 }}\n                >\n                  Save\n                </button></>:entry.projectName}\n              </td>\n              <td\n                style={{\n                  verticalAlign: \"top\",\n                }}\n              >\n                <Time seconds={entry.seconds} />\n              </td>\n              <td\n                className={\"date-cell\"}\n                onClick={() => {\n                  setCurrentEditingEntry(entry.key);\n                  setCurrentEditingField(\"date\");\n                }}\n                style={{\n                  cursor: \"pointer\",\n                }}\n              >\n                {currentEditingEntry &&\n                currentEditingEntry === entry.key &&\n                currentEditingField === \"date\" ? (\n                  <>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        gap: 2,\n                      }}\n                    >\n                      {entry.date.map((number, index) => (\n                        <input\n                          onChange={(event) => {\n                            setWorkLogEntries(\n                              workLogEntries.map((entry) =>\n                                entry.key === currentEditingEntry\n                                  ? {\n                                      ...entry,\n                                      date: entry.date.map(\n                                        (number, numberIndex) =>\n                                          index === numberIndex\n                                            ? Number(event.target.value)\n                                            : number\n                                      ),\n                                    }\n                                  : entry\n                              )\n                            );\n                          }}\n                          style={{\n                            width: index === 0 ? \"60%\" : \"20%\",\n                          }}\n                          value={number}\n                          key={index}\n                        />\n                      ))}\n                    </div>\n                    <button\n                      onClick={processLogEntryEdit}\n                      style={{ width: \"60%\", marginTop: 3 }}\n                    >\n                      Save\n                    </button>\n                  </>\n                ) : (\n                  (([year, month, day]) => (\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"space-around\",\n                      }}\n                    >\n                      <span className={\"date-separator\"}>{year}</span>/\n                      <span className={\"date-separator\"}>{month + 1}</span>/\n                      <span className={\"date-separator\"}>{day}</span>\n                    </div>\n                  ))(entry.date)\n                )}\n              </td>\n              <td\n                onClick={() => {\n                  setCurrentEditingEntry(entry.key);\n                  setCurrentEditingField(\"notes\");\n                }}\n                style={{\n                  verticalAlign: \"top\",\n                  cursor: \"pointer\",\n                }}\n              >\n                {currentEditingEntry &&\n                currentEditingEntry === entry.key &&\n                currentEditingField === \"notes\" ? (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                    }}\n                  >\n                    <Textarea\n                      onChange={(event: ChangeEvent) => {\n                        setWorkLogEntries(\n                          workLogEntries.map((entry) =>\n                            entry.key === currentEditingEntry\n                              ? { ...entry, notes: (event.target as any).value }\n                              : entry\n                          )\n                        );\n                      }}\n                      value={entry.notes}\n                    />\n                    <button\n                      onClick={processLogEntryEdit}\n                      style={{ width: \"20%\", marginTop: 3 }}\n                    >\n                      Save\n                    </button>\n                  </div>\n                ) : (\n                  <div\n                    style={{\n                      whiteSpace: \"break-spaces\",\n                    }}\n                  >\n                    {entry.notes}\n                  </div>\n                )}\n              </td>\n            </tr>\n          ))}\n          {(\n            <>\n              <tr className={\"total\"}>\n                <td>Total</td>\n                <td>\n                  <Time seconds={totalSeconds} />\n                </td>\n                <td\n                  rowSpan={2}\n                  style={{ verticalAlign: \"bottom\", textAlign: \"center\" }}\n                >\n                  Todays date\n                  {((date) => (\n                    <div\n                      style={{\n                        display: \"flex\",\n                        width: \"200\",\n                        justifyContent: \"space-around\",\n                      }}\n                    >\n                      <span className={\"date-separator\"}>\n                        {date.getFullYear()}\n                      </span>\n                      /\n                      <span className={\"date-separator\"}>\n                        {date.getMonth() + 1}\n                      </span>\n                      /\n                      <span className={\"date-separator\"}>{date.getDate()}</span>\n                    </div>\n                  ))(new Date())}\n                </td>\n                <td style={{ verticalAlign: \"top\" }}></td>\n              </tr>\n              <tr className={\"total-payment\"}>\n                <td></td>\n                <td>\n                  Rate per hour\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      gap: 3,\n                      marginTop: 3,\n                    }}\n                  >\n                    <input\n                      type={\"number\"}\n                      value={ratePerHour}\n                      style={{ width: \"60%\" }}\n                      onChange={(event) => setRatePerHour(event.target.value)}\n                    />\n                    <select\n                      style={{ width: \"40%\" }}\n                      onChange={(event) => setCurrency(event.target.value)}\n                      value={currency}\n                      name={\"currency\"}\n                    >\n                      {[\"USD\", \"TL\", \"EUR\"].map((currency) => (\n                        <option key={currency}>{currency}</option>\n                      ))}\n                    </select>\n                  </div>\n                </td>\n                <td colSpan={1} style={{}}>\n                  Payment in total\n                  <div style={{ fontSize: \"2rem\" }}>\n                    {Number((totalSeconds / 60 / 60) * ratePerHour).toFixed(2)}\n                    {{ USD: \"$\", EUR: \"€\", TL: \"TL\" }[currency as string]}\n                  </div>\n                </td>\n              </tr>\n            </>\n          )}\n        </tbody>\n      </table>\n      <h3>Load a database</h3>\n      <p>\n        <input onChange={loadFile} type={\"file\"} />\n      </p>\n      <h3>Export current database</h3>\n      <p\n        style={{\n          display: \"flex\",\n          gap: 5,\n        }}\n      >\n        <button\n          onClick={(event) => {\n            event.preventDefault();\n            exportDatabases();\n          }}\n        >\n          <span>Export</span>\n        </button>\n        <button\n          disabled={isCreateShareableURLInProgress}\n          onClick={() => createShareableURL()}\n        >\n          {isCreateShareableURLInProgress\n            ? \"Creating a shareable url...\"\n            : \"Create a shareable URL of database\"}\n        </button>\n      </p>\n      {shareableUrls.length > 0 && (\n        <table>\n          <thead>\n            <tr>\n              <th style={{ width: '25%' }}>Key</th>\n              <th style={{ width: '25%' }}>Hash</th>\n              <th style={{ width: '25%' }}>Last modification</th>\n              <th style={{ width: '10%' }}>Views</th>\n              <th style={{ width: '15%' }}></th>\n            </tr>\n          </thead>\n          <tbody>\n            {shareableUrls.map((shareableUrl) => (\n              <tr key={shareableUrl.key}>\n                <td><a target=\"_blank\" rel=\"noreferrer\" href={`#${shareableUrl.key}`}>Open link in new window</a></td>\n                <td>\n                  <div style={{display: 'flex', padding: 0}}>\n                  <span title={shareableUrl.contentHash} className=\"long-hash\">{shareableUrl.contentHash}</span>\n                  </div>\n                </td>\n                <td>{new Date(shareableUrl.dateModification || shareableUrl.dateCreation).toLocaleString('en-US', { timeZone: 'UTC' })}</td>\n                <td>{shareableUrl.viewCount}</td>\n                <td>\n                  <div style={{display: 'flex', gap: 3}}>\n                  <button disabled={shareableUrl.contentHash === currentWorkLogEntriesHash} onClick={() => pushChanges(shareableUrl.key)} title=\"Push changes to the shared link\">Sync...</button>\n                  <button onClick={() => deleteLink(shareableUrl.key)} title=\"Delete the current link\">Delete</button>\n                  </div>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n      {error && <p className={\"error\"}>{error}</p>}\n      {info && <p className={\"info\"}>{info}</p>}\n      <h3>Reset current database</h3>\n      <p>\n        <button\n          onClick={() => {\n            if (\n              window.confirm(\n                \"Are you really sure to reset the current database?\"\n              )\n            ) {\n              resetCurrentDatabase();\n            }\n          }}\n        >\n          <span>Reset</span>\n        </button>\n      </p>\n      <footer>\n        Fatih Erikli, MIT Licensed, 2021.\n        <br />\n        Source code available on{\" \"}\n        <a\n          style={{ color: \"gray\" }}\n          target={\"blank\"}\n          href=\"https://github.com/fatih-erikli/time-tracker\"\n        >\n          github\n        </a>\n        .\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","type TimeProps = {\n  seconds: number;\n};\n\nconst Time = ({ seconds }: TimeProps) => {\n  return (\n    <div className={\"time\"}>\n      <div className={\"hours\"}>\n        <div className={\"digits\"}>{Math.floor(seconds / 60 / 60)}</div>\n        <div className={\"text\"}>hours</div>\n      </div>\n      <div className={\"minutes\"}>\n        <div className={\"digits\"}>{Math.floor(seconds / 60) % 60}</div>\n        <div className={\"text\"}>minutes</div>\n      </div>\n      <div className={\"seconds\"}>\n        <div className={\"digits\"}>{seconds % 60}</div>\n        <div className={\"text\"}>seconds</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Time;\n","import { useState } from 'react';\n\nconst DateFilter = () => {\n  const currentDate = new Date();\n  const [currentYear, setCurrentYear] = useState(currentDate.getFullYear());\n  const [currentMonth, setCurrentMonth] = useState(currentDate.getMonth());\n  const [currentDay, setCurrentDay] = useState(currentDate.getDay());\n  return (\n    <div style={{\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginTop: 3,\n    }}>\n      <select value={currentYear} onChange={event => setCurrentYear(Number(event.target.value))}>\n        <option>Year</option>\n        {new Array(100).fill(0).map((_, index) => <option>{currentYear - index}</option>)}\n      </select>\n      <select value={currentMonth} onChange={event => setCurrentMonth(Number(event.target.value))}>\n        <option>Month</option>\n        {new Array(11).fill(0).map((_, index) => <option>{currentMonth - index}</option>)}\n      </select>\n      <select value={currentDay} onChange={event => setCurrentDay(Number(event.target.value))}>\n        <option>Day</option>\n        {new Array(30).fill(0).map((_, index) => <option>{currentDay - index}</option>)}\n      </select>\n    </div>\n  );\n}\n\nexport default DateFilter;\n","import { ChangeEventHandler, useEffect, useRef } from \"react\";\n\ntype TextareaProps = {\n  value: string;\n  onChange: ChangeEventHandler;\n};\n\nexport const Textarea = ({ value, onChange } : TextareaProps) => {\n  const inputElement = useRef<HTMLTextAreaElement>(null);\n  useEffect(() => {\n    if (inputElement.current) {\n      inputElement.current.focus();\n      inputElement.current.select();\n    }\n  }, []);\n  return (\n    <textarea ref={inputElement} value={value} onChange={onChange}></textarea>\n  );\n}\n\nexport default Textarea;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}